1 타일즈 설정
2 확인 사항 @Bean 설정 2개 학습
클래스 파일 com.config.AppConfig

@Bean
    public ViewResolver contentNegotiatingViewResolver(ContentNegotiationManager manager) {
        ContentNegotiatingViewResolver resolver = new ContentNegotiatingViewResolver();
        resolver.setContentNegotiationManager(manager);

        // Define all possible view resolvers
        List<ViewResolver> resolvers = new ArrayList<ViewResolver>();
        TilesViewResolver viewResolver = new TilesViewResolver();
        resolvers.add(viewResolver);
        resolver.setViewResolvers(resolvers);
        return resolver;
    }

//타일즈 설정 빈으로 등록
//타일즈 데피니션 추가시 tilesDefinitions 배열에 추가
//학습용 파일명 규칙은 /WEB-INF/tiles-definitions/demo1/tiles-{영문블라블라}.xml
@Bean
    public TilesConfigurer tilesConfigurer(){
         String[] tilesDefinitions = {
             "/WEB-INF/tiles-definitions/demo1/tiles-sample.xml"
            ,"/WEB-INF/tiles-definitions/tiles.xml"
         };
        TilesConfigurer tilesConfigurer = new TilesConfigurer();
        tilesConfigurer.setDefinitions(tilesDefinitions);
        tilesConfigurer.setCheckRefresh(true);
        return tilesConfigurer;
    }


//설정끝-----------
--타일즈 관련 작업 시나리오
1 데피니션 파일 설정 추가시 public TilesConfigurer tilesConfigurer(){ 메소드 서치
1.1 String[] tilesDefinitions 파일 경로 추가 삽입
1.2 1.1에서 추가한 경로 파일  생성 파일명 규칙은 /WEB-INF/tiles-definitions/demo1/tiles-{영문블라블라}.xml
1.3 (참고용 파일) /SpringModule/src/main/webapp/WEB-INF/tiles-definitions/demo1/tiles-sample.xml

2 콘트롤러 메소드
2.1 콘트롤러 메소드 타일즈 뷰 사용시 뷰네임 명명 규칙
ex) http://localhost:8081/{context}/demo1/sample/sample1
context 제외 demo1.sample.sample1
@RequestMapping("/sample1")
    public String sample1(@RequestParam Map<String , Object> param , ModelMap modelMap) throws Exception{
        return "demo1.sample.sample1";
    }

--문의사항 톡방

3 view
/SpringModule/src/main/webapp/WEB-INF/view/demo1/작성




